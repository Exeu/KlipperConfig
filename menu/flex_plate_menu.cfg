## FlexPlate selection (thx to alexz on voron discord)
[menu __main __flexplate]
type: list
name: Flexplate: {printer.save_variables.variables.plates.array[printer.save_variables.variables.plates.index].name} 
enable: {'plates' in printer.save_variables.variables}
index: 1

[menu __main __flexplate __set]
type: input
name:  Set: {printer.save_variables.variables.plates.array[menu.input|int].name}
enable: {printer.print_stats.state != "printing" and printer.print_stats.state != "paused"}
input: {printer.save_variables.variables.plates.index}
input_min: 0
input_max: {printer.save_variables.variables.plates.array|length - 1}
gcode:
  {%- if menu.event == 'long_click' -%}
    SET_PLATE INDEX={menu.input|int}
  {%- endif -%}

[menu __main __flexplate __offset]
type: input
name:  Offset:{'%01.3f' % menu.input}
enable: {printer.print_stats.state != "printing" and printer.print_stats.state != "paused"}
input: {printer.save_variables.variables.plates.array[printer.save_variables.variables.plates.index].offset}
input_min: -1.0
input_max: 1.0
input_step: 0.001
gcode:
  {%- if menu.event == 'long_click' -%}
    CHANGE_PLATE_VALUE OFFSET={menu.input|float}
  {%- endif -%}


[gcode_macro _SET_PLATE_OFFSET]
description: Helper: Apply the z-offset of the active flexplate
gcode:
  {% if not printer.save_variables.variables.plates %}
    {action_respond_info("FLEXPLATE: No Plate Array defined. ABORDED")}
  {% else %}
    {% set plates = printer.save_variables.variables.plates %}
    SET_GCODE_OFFSET Z=0
    SET_GCODE_OFFSET Z_ADJUST={plates.array[plates.index].offset} MOVE={params.MOVE|default(0)}
  {% endif %}

[gcode_macro LIST_PLATES]
description: List all flexplates
gcode:
  {% if not printer.save_variables.variables.plates %}
    {action_respond_info("FLEXPLATE: No Plate Array defined. ABORDED")}
  {% else %}
    {% set plates = printer.save_variables.variables.plates %}
    {% set out = ["FLEXPLATE: Defined Plates"] %}
    {% for elem in range(plates.array|length) %}
      {% set _dummy = out.append("INDEX: %d -> %s -> offset: %.3fmm" % 
                      (elem, plates.array[elem].name, plates.array[elem].offset)) %}
    {% endfor %}
    {% set  _dummy = out.append("\n Active Plate: %s" % plates.array[plates.index].name) %}
    {action_respond_info(out|join("\n"))}
  {% endif %}

[gcode_macro SET_PLATE]
description: Set an flexplate
gcode:
  {% if not printer.save_variables.variables.plates %}
    {action_respond_info("FLEXPLATE: No Plate Array defined. ABORDED")}
  {% else %}
    {% set plates = printer.save_variables.variables.plates %}
    {% if 'INDEX' not in params|upper %}
      {action_respond_info("FLEXPLATE: No INDEX defined, use SET_PLATE INDEX=index. ABORDED")}
    {% elif params.INDEX|int < 0 or params.INDEX|int >= plates.array|length %}
      {action_respond_info("FLEXPLATE: Index out of range [0..%d]. ABORDED" % (plates.array|length-1))}
    {% else %}
      {% set _dummy = plates.update({'index' : params.INDEX|int}) %}
      SAVE_VARIABLE VARIABLE=plates VALUE="{plates}"
      M117 Plate: {plates.array[plates.index].name}
      {action_respond_info("FLEXPLATE: Set plate: %s with offset: %.3fmm" % (
        plates.array[plates.index].name,plates.array[plates.index].offset))}
      UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=10
    {% endif %}
  {% endif %}

[gcode_macro ADD_PLATE]
description: Add a flexplate to the list
gcode:
  {% set name = params.NAME|default('New')|string %}
  {% set offset = params.OFFSET|default(0.0)|float|round(3) %}
  {% if not printer.save_variables.variables.plates %}
    {action_respond_info("FLEXPLATE: Initialize Plate Array
                          Add plate: %s with offset: %.3fmm at INDEX: 0" % (name,offset))}
    {% set plates = {'array': [{'name': name, 'offset': offset}], 'index' : 0} %}
  {% else %}
    {% set plates = printer.save_variables.variables.plates %}
    {action_respond_info("FLEXPLATE: Add plate: %s with offset: %.3fmm at INDEX: %d" % (name,offset,plates.array|length))}
    {% set _dummy = plates.array.append({'name': name, 'offset': offset}) %}
  {% endif %}
  SAVE_VARIABLE VARIABLE=plates VALUE="{plates}"

[gcode_macro REMOVE_PLATE]
description: Remove a flexplate from the list
gcode:
  {% if not printer.save_variables.variables.plates %}
    {action_respond_info("FLEXPLATE: No Plate Array defined. ABORDED")}
  {% else %}
    {% set plates = printer.save_variables.variables.plates %}
    {% if 'INDEX' not in params|upper %}
      {action_respond_info("FLEXPLATE: No INDEX defined, use REMOVE_PLATE INDEX=index. ABORDED")}
    {% elif plates.array|length == 1 or params.INDEX|int == plates.index %}
      {action_respond_info("FLEXPLATE: Last or active plate can not be removed. ABORDED")}
    {% elif params.INDEX|int < 0 or params.INDEX|int >= plates.array|length %}
      {action_respond_info("FLEXPLATE: Index out of range [0..%d]. ABORDED" % (plates.array|length-1))}
    {% else %}
      {action_respond_info("FLEXPLATE: Remove plate with INDEX %d from list " % params.INDEX|int)}
      {% set _dummy = plates.array.pop(params.INDEX|int) %}
      SAVE_VARIABLE VARIABLE=plates VALUE="{plates}"
    {% endif %}
  {% endif %}

[gcode_macro CHANGE_PLATE_VALUE]
description: Change name or offset of an flexplate in the list
gcode:
  {% if not printer.save_variables.variables.plates %}
    {action_respond_info("FLEXPLATE: No Plate Array defined. ABORDED")}
  {% else %}
    {% set plates = printer.save_variables.variables.plates %}
    {% set index = params.INDEX|default(plates.index)|int %}
    {% if index < 0 or index >= plates.array|length %}
      {action_respond_info("FLEXPLATE: Index out of range [0..%d]. ABORDED" % (plates.array|length-1))}
    {% else %}
      {% set change_txt = [] %}
      {% if 'NAME' in params|upper %}
        {% set _dummy = change_txt.append("name to %s" % params.NAME|string) %}
        {% set _dummy = plates.array[index].update({'name': params.NAME|string}) %}
      {% endif %}
      {% if 'OFFSET' in params|upper %}
        {% set _dummy = change_txt.append("offset to %.3fmm" % params.OFFSET|float|round(3)) %}
        {% set _dummy = plates.array[index].update({'offset': params.OFFSET|float|round(3)}) %}
      {% endif %}
      {% if change_txt|length > 0 %}
        {action_respond_info("FLEXPLATE: Changed %s at plate with INDEX %d" % (change_txt|join(" and "),index))}
        SAVE_VARIABLE VARIABLE=plates VALUE="{plates}"
      {% else %}
        {action_respond_info("FLEXPLATE: Nothing changed at plate with INDEX %d" % index)}
      {% endif %}
    {% endif %}
  {% endif %}