# These macros are required for Fluidd to correctly function.
# You can copy these entries into your printer.cfg.
# 
# Alternatively, import this file by adding
# this line into your printer.cfg;
# 
# [include client_macros.cfg]

[gcode_macro PARKING_POSITION]
gcode:
  	{% set RAISE_Z_MIN_POSITION = params.RAISE_Z_MIN_POSITION|default(50)|float %}
  	{% set RAISE_Z_DISTANCE = params.RAISE_Z_DISTANCE|default(40)|float %}
  	{% set Z_SPEED = params.Z_SPEED|default(600)|float %}
  	{% set XY_SPEED = params.XY_SPEED|default(4500)|float %}
  	{% set PARKING_POSITION_X = params.PARKING_POSITION_X|default(10)|float %}
  	{% set PARKING_POSITION_Y = params.PARKING_POSITION_Y|default(200)|float %}

    {% set MAX_Z = (printer.configfile.config["stepper_z"]["position_max"] | min) %}

    {% if 'z' in printer.toolhead.homed_axes %}
        G90 ; Absolute positioning

        # Go to Z parking position
        {% if printer.gcode_move.gcode_position.z < MAX_Z %}
            M118 PARKING_POSITION: Z position in known, raising Z...

            # Raise Z
            {% if printer.gcode_move.gcode_position.z > RAISE_Z_MIN_POSITION %}
                {% set new_z_pos = ([(printer.gcode_move.gcode_position.z + (RAISE_Z_DISTANCE | float) ), MAX_Z] | min) %}
                M118 PARKING_POSITION: Z axis was below MAX_Z, raising to {new_z_pos}
                G1 Z{new_z_pos} F{Z_SPEED}
            {% else %}
                {% set new_z_pos = ([([(printer.gcode_move.gcode_position.z + (RAISE_Z_DISTANCE | float)), (RAISE_Z_MIN_POSITION | float) ] | max), MAX_Z] | min) %}
                M118 PARKING_POSITION: Z axis was below MAX_Z, raising to {new_z_pos}
                G1 Z{new_z_pos} F{Z_SPEED}
            {% endif %}
        {% endif %}
    {% else %}
        M118 PARKING_POSITION: Z position is unknown, raising not possible
    {% endif %}

    {% if ('x' in printer.toolhead.homed_axes) and ('y' in printer.toolhead.homed_axes) %}
        # Go to XY parking position
        G1 X{PARKING_POSITION_X} Y{PARKING_POSITION_Y} F{XY_SPEED}
    {% else %}
        M118 PARKING_POSITION: X and/or Y position is unknown, parking not possible
    {% endif %}


[gcode_macro END_PRINT]
gcode:
    M400 ; wait for buffer to clear
    TURN_OFF_HEATERS
    M107 ; turn off fan
    PARKING_POSITION
    M221 S100 ; reset flow

    M117 Print finished...
    OFFSET_FROM_VARS

[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(210)|float %}
    {% set ADJUST_Z_OFFSET = params.ADJUST_Z_OFFSET|default(0.0)|float %}

    {% if ('ADJUST_Z_OFFSET' in params) %}
        M117 Adjust Z override...
        SET_GCODE_OFFSET Z=0
        SET_GCODE_OFFSET Z_ADJUST={ADJUST_Z_OFFSET}
        {action_respond_info("Overriding Z-Offset. Set z_offset: %.3f" % (ADJUST_Z_OFFSET))}
    {% endif %}

    M107 ; turn off fan
    M220 S100 ; set speed to 100%

    G21 ; set units to millimeters
    G90 ; use absolute positioning
    M82 ; absolute extrusion mode

    M117 Preheating...

    M104 S170 ; set extruder temp
    M140 S{BED_TEMP} ; set bed temp
    M190 S{BED_TEMP} ; wait for bed temp
    M109 S160 ; wait for extruder temp

    M117 Homing...
    G28 ; home

    M117 Mesh bed leveling...
    BED_MESH_CALIBRATE

    M117 Preparing for print...
    G1 X10.0 Y-3.0 Z1 F4000.0 ; goto start position for line

    M117 Heating extruder...
    M109 S{EXTRUDER_TEMP} ; set and wait for extruder temp

    M221 S100 ; Set flow to 100

    M117 Purge bubble...
    G1 Z0.2 F800 ;
    G92 E0.0 ; reset extruder distance position
    G91 ; relative positioning
    G1 E8 F1000 ; Purge Bubble
    M117 Purge line 1/2...
    G1 X60.0 E9  F1000 ; intro line
    G1 X100.0 E14  F1000 ; intro line
    M117 Purge line 2/2...
    G1 X1 Z0.1 F1000 ; outro line
    G1 X20 Z0.05 F1000 ; outro line

    M117 Starting print...

    G90 ; absolute positioning
    G1 Z1 F3000 ; lift nozzle a bit
    G92 E0.0 ; reset extruder distance position

    M117 Printing...


[gcode_macro M600]
variable_extr_temp: 0
gcode:
  	{% set X = params.X|default(100)|float %}
  	{% set Y = params.Y|default(0)|float %}
  	{% set Z = params.Z|default(10)|float %}
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000


# Load and Unload Macros for the stock MK3 extruder.  Customize to your
# liking.
[gcode_macro LOAD_FILAMENT]
gcode:
    M117 Loading Filament...
    G92 E0.0
    G91
    G1 E40 F400
    G1 E30 F400
    G1 E25 F200
    G1 E100 F300
    G90
    G92 E0.0
    M400
    M117 Load Complete
    UPDATE_DELAYED_GCODE ID=clear_display DURATION=5


[gcode_macro UNLOAD_FILAMENT]
gcode:
    SET_FILAMENT_SENSOR SENSOR=fsensor ENABLE=0
    M117 Unloading Filament...
    G92 E0.0
    G91
    G1 E-45 F5200
    G1 E-15 F1000
    G1 E-20 F1000
    G90
    G92 E0.0
    M400
    M117 Remove Filament Now!
    UPDATE_DELAYED_GCODE ID=clear_display DURATION=5
    SET_FILAMENT_SENSOR SENSOR=fsensor ENABLE=1


[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
  TURN_OFF_HEATERS
  CLEAR_PAUSE
  SDCARD_RESET_FILE
  BASE_CANCEL_PRINT
  OFFSET_FROM_VARS


[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 20.0) %}
      {% set z_safe = 20.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  SAVE_GCODE_STATE NAME=PAUSE_state
  BASE_PAUSE
  G91
  G1 E-{E} F2100
  G1 Z{z_safe} F900
  G90
  G1 X{x_park} Y{y_park} F6000


[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### end of definitions #####
  G91
  G1 E{E} F2100
  RESTORE_GCODE_STATE NAME=PAUSE_state
  BASE_RESUME


[gcode_macro MOVE_TO_ZERO]
gcode:
  G1 X0 Y0 F2000

[gcode_macro LED_ON]
gcode:
  SET_LED LED=downlight RED={printer.save_variables.variables.led_brightness} GREEN={printer.save_variables.variables.led_brightness} BLUE={printer.save_variables.variables.led_brightness}

[gcode_macro LED_OFF]
gcode:
  SET_LED LED=downlight RED=0 GREEN=0 BLUE=0

[gcode_macro TEST_NOISE_X]
gcode:
    M117 Raising Z
    #G1 Z20 F300
    M117 Going to start position
    G1 X10 F1000

    M117 Testing with 3000
    G1 X210 F3000
    G1 X10 F3000

    M117 Testing with 4000
    G1 X210 F4000
    G1 X10 F4000

    M117 Testing with 5000
    G1 X210 F5000
    G1 X10 F5000


[gcode_macro OFFSET_FROM_VARS]
gcode:
    SET_GCODE_OFFSET Z=0
    SET_GCODE_OFFSET Z_ADJUST={printer.save_variables.variables.plate_offset_z|float}
    M117 Sheet:  {printer.save_variables.variables.plate_name}
      {action_respond_info("Init Plate: %s --> set z_offset: %.3f" % (printer.save_variables.variables.plate_name|string,printer.save_variables.variables.plate_offset_z|float))}
